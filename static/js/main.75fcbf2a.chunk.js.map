{"version":3,"sources":["redux/dialogs-reducer.js","components/Users/users.module.css","api/api.js","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.js","components/common/Pagenator/Paginator.js","components/Users/User.js","components/Users/Users.js","utils/object-helper.js","redux/users-reducer.js","redux/users-selectors.js","components/Users/UsersContainer.js","img/logo_ract.jpg","components/Header/Header.js","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.js","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","components/common/FormsControl/FormsControl.js","components/common/Pagenator/Paginator.module.css","components/common/FormsControl/FormsControl.module.css","utils/validators/validators.js","img/preloader.gif","components/common/Preloader/Preloader.js","img/ava.jpg","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","messages","id","message","dialogs","name","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getSatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","filter","p","map","pageNumber","selectedPage","noSelectedPage","e","User","user","followingInProgress","src","photos","small","userPhoto","followed","disabled","some","Users","totalUsersCount","users","u","Id","updateObjectInArray","items","itemId","objPropName","newObjProps","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","isFetching","usersReducers","totalCount","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsersWithSuperSelector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","props","this","Preloader","React","Component","compose","connect","dispatch","a","resultCode","page","Header","header","logoHeaderImg","loginBlock","isAuth","SET_USER_DATA","getAuthUserData","setAuthUserData","payload","authReducer","HeaderContainer","auth","LoginReduxForm","maxLengthCreator","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","initializedSuccess","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","App","initializeApp","fallback","path","render","AppContainer","withRouter","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","child","element","hasError","formControl","children","TextArea","restProps","placeholder","validators","component","text","validate","value","maxLength","backgroundColor","preloaderImg","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","getUserProfile","setUserProfile","getStatus","setStatus","addPostActionCreator","newPostText","newPost","postId"],"mappings":"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","file":"static/js/main.75fcbf2a.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: \"Hi1\"},\r\n        {id: 2, message: \"Hi2\"}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: \"Dimon\"},\r\n        {id: 2, name: \"Andrey\"}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody: newMessageBody});\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__Hago7\",\"selectedPage\":\"users_selectedPage__28snV\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\": \"0bbd79f4-cae6-4275-8299-c3093045533d\"}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getSatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put('profile/status', {status: status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1XGZe\",\"item\":\"Navbar_item__3ki9C\",\"activeLink\":\"Navbar_activeLink__t82FB\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport userPhoto from \"../../../img/ava.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport {usersAPI} from \"../../../api/api\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {\r\n                portionNumber > 1 &&\r\n                <button onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>\r\n            }\r\n\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => <span className={currentPage === p\r\n                        ? styles.pageNumber + ' ' + styles.selectedPage\r\n                        : styles.pageNumber + ' ' + styles.noSelectedPage} key={p} onClick={e => onPageChanged(p)}>{p}</span>)\r\n            }\r\n            {\r\n                portionCount > portionNumber &&\r\n                <button onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../img/ava.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow,}) => {\r\n    return (\r\n        <div>\r\n                   <span>\r\n                       <div>\r\n                           <NavLink to={'/profile/' + user.id}>\r\n                               <img src={user.photos.small != null\r\n                                   ? user.photos.small\r\n                                   : userPhoto} className={s.userPhoto}/>\r\n                               </NavLink>\r\n                       </div>\r\n                       <div>\r\n                           {\r\n                               user.followed\r\n                                   ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={\r\n                                       () => {\r\n                                           unfollow(user.id)\r\n                                       }}>Unfollow</button>\r\n                                   : <button disabled={followingInProgress.some(id => id === user.id)} onClick={\r\n                                       () => {\r\n                                           follow(user.id)\r\n                                       }}>Follow</button>\r\n                           }\r\n                       </div>\r\n                   </span>\r\n                <span>\r\n                   <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                </span>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Pagenator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({\r\n                 currentPage,\r\n                 totalUsersCount,\r\n                 pageSize,\r\n                 onPageChanged,\r\n                 users,\r\n                 followingInProgress,\r\n                 follow,\r\n                 unfollow,\r\n                 ...props\r\n             }) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n            <div>\r\n                {\r\n                    users.map(u => <User user={u}\r\n                                         followingInProgress={followingInProgress}\r\n                                         key={u.Id}\r\n                                         unfollow={unfollow}\r\n                                         follow={follow}/>)\r\n                }\r\n            </div>\r\n            )\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n   return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    });\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helper\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n                // users: state.users.map(u => {\r\n                //         if (u.id === action.userId)\r\n                //             return {...u, followed: true};\r\n                //         return u;\r\n                //     }\r\n                // )\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n\r\n                // users: state.users.map(u => {\r\n                //         if (u.id === action.userId)\r\n                //             return {...u, followed: false}\r\n                //         return u;\r\n                //     }\r\n                // )\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {...state, totalUsersCount: action.totalCount};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    };\r\n\r\n}\r\n\r\n// const followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n//     dispatch(toggleFollowingProgress(true, userId));\r\n//\r\n//     let response = await apiMethod(userId)\r\n//     if (response.data.resultCode == 0) {\r\n//         dispatch(actionCreator(userId));\r\n//     }\r\n//     dispatch(toggleFollowingProgress(false, userId));\r\n// }\r\n//\r\n// export const follow = (userId) => {\r\n//     return (dispatch) => {\r\n//         followUnfollowFlow(dispatch, userId, follow.bind(usersAPI), followSuccess)\r\n//     };\r\n// };\r\n//\r\n// export const unfollow = (userId) => {\r\n//     return (dispatch) => {\r\n//         followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n//     };\r\n// }\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await usersAPI.follow(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(followSuccess(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await usersAPI.unfollow(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(unfollowSuccess(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport default usersReducers;\r\n\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {type: FOLLOW, userId};\r\n};\r\nexport const unfollowSuccess = (userId) => {\r\n    return {type: UNFOLLOW, userId};\r\n};\r\nexport const setUsers = (users) => {\r\n    return {type: SET_USERS, users};\r\n};\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage};\r\n};\r\nexport const setTotalUsersCount = (totalCount) => {\r\n    return {type: SET_USERS_TOTAL_COUNT, totalCount};\r\n};\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {type: TOGGLE_IS_FETCHING, isFetching};\r\n};\r\nexport const toggleFollowingProgress = (isFetching, userId) => {\r\n    return {type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId};\r\n};","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersWithSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsersWithSuperSelector = createSelector(getUsersWithSelector,(users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersWithSuperSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     };\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersWithSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    };\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers\r\n    }),\r\n)(UsersContainer);\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId));\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId));\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users));\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber));\r\n//         },\r\n//         setUsersTotalCount: (totalCount) => {\r\n//             dispatch(setUsersTotalCountAC(totalCount));\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching));\r\n//         }\r\n//     };\r\n// };\r\n// let withRedirect = withAuthRedirect(UsersContainer);\r\n// export default connect(mapStateToProps, {\r\n//     follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers})(withRedirect);","export default __webpack_public_path__ + \"static/media/logo_ract.9b933d39.jpg\";","import React from \"react\";\r\nimport logoHeaderImg from \"../../img/logo_ract.jpg\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src={logoHeaderImg}/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    :\r\n                <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n   let response = await authAPI.me();\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : 'Some Error'\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n                if (response.data.resultCode === 0)\r\n                    dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nconst setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport default authReducer;\r\n\r\n\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControl/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"../common/FormsControl/FormsControl.module.css\"\r\nimport mapDispatchToProps from \"react-redux/lib/connect/mapDispatchToProps\";\r\n\r\n\r\nconst maxLength = maxLengthCreator(20);\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required],\r\n                Input)}\r\n            {createField('Password', 'password', [required],\r\n                Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', [],\r\n                Input, {type: 'checkbox'}, 'remember me')}\r\n            {\r\n                error && <div className={style.formSummaryError}>\r\n                    {error}</div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth)\r\n        return <Redirect to={\"/profile\"}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess())\r\n    });\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport default appReducer;\r\n\r\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducers from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducers,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, {Suspense, lazy} from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if(!this.props.initialized)\n            return <Preloader/>;\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Suspense fallback={<div>Loading...</div>}>\n                        <Route path='/dialogs'\n                               render={() => <DialogsContainer/>}/>\n                        <Route path='/profile/:userId?'\n                               render={() => <ProfileContainer/>}/>\n                    </Suspense>\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={() => <LoginPage/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer =  compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App);\n\nconst SamuraiJSApp = (props) => {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </BrowserRouter>\n    );\n}\n\nexport default SamuraiJSApp;","import React from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport SamuraiJSApp from \"./App\";\n\n\n// let h1 = document.createElement('h1');\n// h1.innerHTML = 'Hello';\n// document.querySelector('body').appendChild(h1);\n\n// React.createElement('h1');\n\n// setInterval(() => {\n//     store.dispatch({type: 'Fake'});\n// }, 2000);\n\n    ReactDOM.render(<SamuraiJSApp/>,\n        document.getElementById('root')\n    )\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport styles from \"./FormsControl.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, child, element, ...props}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps}/>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={validators}\r\n                   component={component}\r\n                   {...props}\r\n            />{text}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1ZXng\",\"pageNumber\":\"Paginator_pageNumber__2QgE2\",\"selectedPage\":\"Paginator_selectedPage__2xx5F\",\"noSelectedPage\":\"Paginator_noSelectedPage__3oL4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3Svet\",\"error\":\"FormsControl_error__1qaM5\",\"formSummaryError\":\"FormsControl_formSummaryError__2bjHR\"};","export const required = value => {\r\n    if (value)\r\n        return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value) => {\r\n        if (value && value.length > maxLength)\r\n            return `Max length is ${maxLength} symbols`;\r\n        return undefined;\r\n    }\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.10625dac.gif\";","import preloaderImg from \"../../../img/preloader.gif\";\r\nimport React from \"react\";\r\n\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={{backgroundColor: 'green'}}>\r\n            <img src={preloaderImg} />\r\n        </div>;\r\n};\r\n\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/ava.6ec58bca.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3t-GK\",\"loginBlock\":\"Header_loginBlock__2UDAW\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hello World!\", likesCount: 12},\r\n        {id: 2, message: \"Hello World!2\", likesCount: 20}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n\r\n            };\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n    };\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getSatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setStatus(status));\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nconst setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nconst setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}