{"version":3,"sources":["hok/withAuthRedirect.js","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","img/123.jpg","components/Profile/MyPosts/ProfileInfo/ProfileStatus.js","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/MyPosts/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","module","exports","Post","className","s","posts","item","src","avaImage","message","likesCount","MyPosts","memo","postsElements","map","p","postsBlock","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","AddNewPostForm","handleSubmit","Field","component","TextArea","name","validate","required","placeholder","reduxForm","form","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","mainContentImg","descriptonBlock","photos","large","Preloader","MyPostsContainer","profilePage","dispatch","action","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"6NAIaA,EAAmB,SAACC,GAE7B,IAIMC,EANqC,uKAQnC,OAAIC,KAAKC,MAAMC,OAER,cAACJ,EAAD,eAAeE,KAAKC,QADhB,cAAC,IAAD,CAAUE,GAAI,eATU,GAMXC,IAAMN,WAUtC,OAFqCO,aAZJ,SAACC,GAAD,MAAY,CACzCJ,OAAQI,EAAMC,KAAKL,UAWcG,CAAoCN,K,oBCjB7ES,EAAOC,QAAU,CAAC,gBAAkB,uC,oBCApCD,EAAOC,QAAU,CAAC,KAAO,wB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,6ICoBpDC,EAjBF,SAACT,GAEV,OACI,qBAAKU,UAAWC,IAAEC,MAAlB,SACI,sBAAKF,UAAWC,IAAEE,KAAlB,UACI,qBAAKC,IAAKC,MACTf,EAAMgB,QACP,gCACI,wCACChB,EAAMiB,oB,mDCNrBC,EAAUf,IAAMgB,MAAK,SAAAnB,GAIvB,IAAIoB,EAAgBpB,EAAMY,MACrBS,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMN,QAASM,EAAEN,QAASC,WAAYK,EAAEL,gBAQtD,OACI,sBAAKP,UAAWC,IAAEY,WAAlB,UACI,0CACA,cAAC,EAAD,CAAgBC,SAPR,SAACC,GACbzB,EAAM0B,QAAQD,EAAOE,gBAOjB,qBAAKjB,UAAWC,IAAEC,MAAlB,SACKQ,UAMXQ,EAAcC,YAAiB,IAEjCC,EAAiB,SAAC9B,GAClB,OACI,uBAAMwB,SAAUxB,EAAM+B,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAM,cAC3BC,SAAU,CAACC,IAAUT,GACrBU,YAAa,mBAExB,8BACI,oDAQhBR,EAAiBS,YAAU,CAACC,KAAM,yBAAjBD,CAA2CT,GAE7CZ,Q,kBCpDA,MAA0B,gC,WCGbf,IAAMN,U,QCmDnB4C,EAnDgB,SAACzC,GAAU,MAKR0C,oBAAS,GALD,mBAKjCC,EALiC,KAKvBC,EALuB,OAMZF,mBAAS1C,EAAM6C,QANH,mBAMjCA,EANiC,KAMzBC,EANyB,KA0BtC,OACI,iCAEUH,GACF,8BACI,sBAAMI,cAnBD,WACjBH,GAAY,IAkBA,SACK5C,EAAM6C,QAAU,iBAKzBF,GACA,8BACI,uBAAOK,SAlBA,SAACC,GACpBH,EAAUG,EAAEC,cAAcC,QAkBPC,WAAW,EACXC,OAzBI,WACvBT,GAAY,GACZ5C,EAAMsD,aAAaT,IAwBAM,MAAON,UCpBnBU,EAlBK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASX,EAA0B,EAA1BA,OAAQS,EAAkB,EAAlBA,aACnC,OAAIE,EAIA,gCACI,8BACI,qBAAK1C,IAAK2C,MAEd,sBAAK/C,UAAWC,IAAE+C,gBAAlB,UACI,qBAAK5C,IAAK0C,EAAQG,OAAOC,QACzB,cAAC,EAAD,CAAwBf,OAAQA,EACjBS,aAAcA,UAV9B,cAACO,EAAA,EAAD,K,gBCeAC,EAFU1D,aAhBD,SAACC,GACrB,MAAO,CACHO,MAAOP,EAAM0D,YAAYnD,MACzBe,YAAatB,EAAM0D,YAAYpC,gBAIZ,SAACqC,GACxB,MAAO,CACHtC,QAAS,SAACC,GACN,IAAIsC,EAASC,YAAqBvC,GAClCqC,EAASC,OAKI7D,CAA6Cc,GCNvDiD,EAVC,SAACnE,GACb,OACI,gCACI,cAAC,EAAD,CAAawD,QAASxD,EAAMwD,QAASX,OAAQ7C,EAAM6C,OACtCS,aAActD,EAAMsD,eACjC,cAAC,EAAD,Q,uBCFNc,E,kLAGE,IAAIC,EAAStE,KAAKC,MAAMsE,MAAMC,OAAOF,OAChCA,IACDA,EAAStE,KAAKC,MAAMwE,mBAEhBzE,KAAKC,MAAMyE,QAAQC,KAAK,UAEhC3E,KAAKC,MAAM2E,eAAeN,GAC1BtE,KAAKC,MAAM4E,UAAUP,K,+BAKrB,OACI,cAAC,EAAD,eAAatE,KAAKC,Y,GAhBCG,IAAMN,WAmCtBgF,4BACXzE,aAfkB,SAACC,GAEnB,MAAO,CACHmD,QAASnD,EAAM0D,YAAYP,QAC3BX,OAAQxC,EAAM0D,YAAYlB,OAC1B2B,iBAAkBnE,EAAMC,KAAK+D,OAC7BpE,OAAQI,EAAMC,KAAKL,UASE,CAAC0E,mBAAgBC,cAAWtB,mBACrDwB,IAFWD,CAIbT","file":"static/js/3.1992734f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth,\r\n    });\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth)\r\n                return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptonBlock\":\"ProfileInfo_descriptonBlock__1h0uL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Profile_item__1-PvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3l_Re\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1UWB3\",\"posts\":\"MyPosts_posts__XJ-Dz\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\nimport avaImage from '../../../../img/ava.jpg'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.item}>\r\n                <img src={avaImage}/>\r\n                {props.message}\r\n                <div>\r\n                    <span>like</span>\r\n                    {props.likesCount}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControl/FormsControl\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    // console.log('RENDER MyPosts');\r\n\r\n    let postsElements = props.posts\r\n        .map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name={\"newPostText\"}\r\n                       validate={[required, maxLength10]}\r\n                       placeholder={\"Post message\"}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n//чтобы не создавать новую пременную переприсваиваем,\r\n// соответственно AddNewPostForm должен быть let, а не const\r\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","export default __webpack_public_path__ + \"static/media/123.0927e6e7.jpg\";","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status)\r\n            this.setState({status: this.props.status});\r\n    };\r\n\r\n    render() {\r\n        console.log('render')\r\n        return (\r\n            <div>\r\n                {\r\n                    !this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>\r\n                            {this.props.status || '----------'}</span>\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                               value={this.state.status}></input>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    // let stateWithSetState = useState(false);\r\n    // let editMode = stateWithSetState[0];\r\n    // let setEditMode = stateWithSetState[1];\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    // useEffect(() => {\r\n    //     setStatus(props.status);\r\n    // }, [props.status]);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                (!editMode) &&\r\n                <div>\r\n                    <span onDoubleClick={activateMode}>\r\n                        {props.status || '----------'}</span>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                           autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                           value={status}>\r\n                    </input>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport mainContentImg from \"../../../../img/123.jpg\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={mainContentImg}/>\r\n            </div>\r\n            <div className={s.descriptonBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status}\r\n                               updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            let action = addPostActionCreator(newPostText);\r\n            dispatch(action);\r\n        }\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport s from './Profile.module.css';\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withAuthRedirect} from \"../../hok/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId)\r\n                this.props.history.push('/login');\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        // console.log('Render Profile')\r\n        return (\r\n            <Profile {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    // console.log('mapStateToProps PROFILE');\r\n    return({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n// export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);"],"sourceRoot":""}